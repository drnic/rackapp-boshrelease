#!/usr/bin/env bash

base_dir=/var/vcap

if [[ $EUID -eq 0 ]]
then
  mkdir -p ${base_dir}
  chmod 777 ${base_dir}
  exit 1
else
  sudo mkdir -p ${base_dir}
  sudo chmod 777 ${base_dir}
fi

cd $(dirname $0)/..
release_path=$(pwd)
scripts=${release_path}/scripts

bundle --local

# preserve env variables
gem_home=$GEM_HOME; bundle_gemfile=$BUNDLE_GEMFILE; rubyopt=$RUBYOPT

compile_base=${base_dir}/data/compile
install_base=${base_dir}/data/packages

# iterate over sorted list of packages to install from `packages_to_install` script
for package in $(${scripts}/helpers/packages_to_install)
do
  package_path=${release_path}/packages/${package}
  package_version=$(${scripts}/helpers/dev_package_version ${package})
  
  # Unpack latest .dev_builds/packages/${package}/${package_version}-dev.tgz & compile
  unset GEM_HOME; unset BUNDLE_GEMFILE; unset RUBYOPT

  export BOSH_COMPILE_TARGET=${compile_base}/${package}
  export BOSH_INSTALL_TARGET=${install_base}/${package}/${package_version}
  
  if [[ -e ${BOSH_INSTALL_TARGET}/completed ]]
  then
    echo Skipping ${package} ${package_version}, already compiled.
  else
    echo Compiling ${package} ${package_version}...

    rm -rf ${BOSH_COMPILE_TARGET}
    mkdir -p ${BOSH_COMPILE_TARGET}
    mkdir -p ${BOSH_INSTALL_TARGET}

    cd ${BOSH_COMPILE_TARGET}
    cp ${release_path}/.dev_builds/packages/${package}/${package_version}.tgz .
    tar -zxf ${package_version}.tgz 2>&1

    bash -x ${package_path}/packaging 2>&1 || exit 1

    # setup versionless symlinks
    #   /var/vcap/data/packages/ruby/0.X-dev -> /var/vcap/packages/ruby
    mkdir -p ${base_dir}/packages
    rm ${base_dir}/packages/${package}
    ln -s ${BOSH_INSTALL_TARGET} ${base_dir}/packages/${package}

    touch ${BOSH_INSTALL_TARGET}/completed
  fi
  
  cd ${release_path}
done

# restore env variables
GEM_HOME=$gem_home; BUNDLE_GEMFILE=$bundle_gemfile; RUBYOPT=$rubyopt
