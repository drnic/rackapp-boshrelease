#!/bin/bash

export RACKAPP_JOB_DIR=/var/vcap/jobs/rackapp
export RAILS_ENV=production
export PATH=/var/vcap/packages/ruby/bin:$PATH

RACKAPP_PACKAGE_DIR=/var/vcap/packages/rackapp
NFS_SHARE=/var/vcap/shared

RUN_DIR=/var/vcap/sys/run/rackapp
LOG_DIR=/var/vcap/sys/log/rackapp
PIDFILE=$RUN_DIR/rackapp.pid

export RACKAPP_CONFIG=$RACKAPP_JOB_DIR/config/rackapp.yml
export BUNDLE_GEMFILE=$RACKAPP_PACKAGE_DIR/rackapp/Gemfile
export HOME=/home/vcap # rake needs it to be set to run tasks
export TMPDIR=/var/vcap/data/rackapp/tmp

<% if properties.env %>
<% if properties.env.http_proxy %>
export HTTP_PROXY='<%= properties.env.http_proxy %>'
export http_proxy='<%= properties.env.http_proxy %>'
<% end %>
<% if properties.env.https_proxy %>
export HTTPS_PROXY='<%= properties.env.https_proxy %>'
export https_proxy='<%= properties.env.https_proxy %>'
<% end %>
<% if properties.env.no_proxy %>
export NO_PROXY='<%= properties.env.no_proxy %>'
export no_proxy='<%= properties.env.no_proxy %>'
<% end %>
<% end %>

export CONFIG_DIR=$RACKAPP_JOB_DIR/config

export C_INCLUDE_PATH=/var/vcap/packages/mysqlclient/include/mysql:/var/vcap/packages/sqlite/include:/var/vcap/packages/libpq/include:$C_INCLUDE_PATH
export LIBRARY_PATH=/var/vcap/packages/mysqlclient/lib/mysql:/var/vcap/packages/sqlite/lib:/var/vcap/packages/libpq/lib:$LIBRARY_PATH
export LANG=en_US.UTF-8

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "Rackapp"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $STAGING_CACHE_DIR
    mkdir -p $TMPDIR

    chown vcap:vcap $RUN_DIR
    chown vcap:vcap $LOG_DIR
    chown vcap:vcap $TMPDIR

    echo $$ > $PIDFILE
    chown vcap:vcap $PIDFILE

    # Create the secure users and setup sudo privs for vcap
    # NB: This needs to happen _before_ executing `rake db:migrate' as that requires
    #     the existence of secure users (staging initializer).
    $RACKAPP_PACKAGE_DIR/rackapp/script/create_secure_users.rb
    chown root:root $RACKAPP_JOB_DIR/config/sudoers
    chmod 440 $RACKAPP_JOB_DIR/config/sudoers
    cp $RACKAPP_JOB_DIR/config/sudoers /etc/sudoers

    # Only done on the first RACKAPP launch
    <% if spec.index.to_i == 0 %>
      cd $RACKAPP_PACKAGE_DIR/rackapp
      export RACKAPP_NOSTART=1
      chpst -u vcap:vcap bundle exec rake db:migrate >>$LOG_DIR/db_migrate.stdout.log 2>>$LOG_DIR/db_migrate.stderr.log
      if [ $? != 0 ]; then
        echo "Migrations failed"
        # TODO: what to do with other CCs if this failed?
        exit 1
      fi
      unset RACKAPP_NOSTART

    <% end %>

    # Configure the core file location
    mkdir -p /var/vcap/sys/cores
    chown vcap:vcap /var/vcap/sys/cores
    echo /var/vcap/sys/cores/core-%e-%s-%p-%t > /proc/sys/kernel/core_pattern

    ulimit -c unlimited

    <% if properties.syslog_aggregator %>
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $CONFIG_DIR
    <% end %>

    # TODO how to run the rackapp? webrick? puma? foreman?
    exec chpst -u vcap:vcap $RACKAPP_PACKAGE_DIR/rackapp/bin/rackapp \
         >>$LOG_DIR/rackapp.stdout.log \
         2>>$LOG_DIR/rackapp.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: rackapp_ctl {start|stop}"

    ;;

esac
