#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

if [[ $EUID -ne 0 ]]; then
  echo "ERROR: This script must be run as root" 1>&2
  exit 1
fi

export RACKAPP_JOB_DIR=/var/vcap/jobs/webapp
export PATH=/var/vcap/packages/ruby/bin:$PATH

export RAILS_ENV=production
export RACK_ENV=production
export PORT=5000

RACKAPP_PACKAGE_DIR=/var/vcap/packages/rackapp
RACKAPP_DIR=$RACKAPP_PACKAGE_DIR/rackapp

RUN_DIR=/var/vcap/sys/run/webapp
LOG_DIR=/var/vcap/sys/log/webapp
PIDFILE=$RUN_DIR/webapp.pid

export RACKAPP_CONFIG=$RACKAPP_JOB_DIR/config/appconfig.yml
export BUNDLE_GEMFILE=$RACKAPP_DIR/Gemfile
export HOME=/home/vcap # rake needs it to be set to run tasks
export TMPDIR=/var/vcap/data/webapp/tmp

<% if properties.env %>
<% if properties.env.http_proxy %>
export HTTP_PROXY='<%= properties.env.http_proxy %>'
export http_proxy='<%= properties.env.http_proxy %>'
<% end %>
<% if properties.env.https_proxy %>
export HTTPS_PROXY='<%= properties.env.https_proxy %>'
export https_proxy='<%= properties.env.https_proxy %>'
<% end %>
<% if properties.env.no_proxy %>
export NO_PROXY='<%= properties.env.no_proxy %>'
export no_proxy='<%= properties.env.no_proxy %>'
<% end %>
<% end %>

export CONFIG_DIR=$RACKAPP_JOB_DIR/config

export C_INCLUDE_PATH=/var/vcap/packages/mysqlclient/include/mysql:/var/vcap/packages/sqlite/include:/var/vcap/packages/libpq/include
export LIBRARY_PATH=/var/vcap/packages/mysqlclient/lib/mysql:/var/vcap/packages/sqlite/lib:/var/vcap/packages/libpq/lib
export LANG=en_US.UTF-8

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    pid_guard $PIDFILE "webapp"

    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $TMPDIR

    chown vcap:vcap $RUN_DIR
    chown vcap:vcap $LOG_DIR
    chown vcap:vcap $TMPDIR

    cd $RACKAPP_PATH
    <% if properties.webapp && properties.webapp.run_migrations %>
    export RACKAPP_NOSTART=1
    chpst -u vcap:vcap bundle exec rake db:migrate >>$LOG_DIR/db_migrate.stdout.log 2>>$LOG_DIR/db_migrate.stderr.log
    if [ $? != 0 ]; then
      echo "Migrations failed"
      # TODO: what to do with other CCs if this failed?
      exit 1
    fi
    unset RACKAPP_NOSTART
    <% end %>

    # Configure the core file location
    mkdir -p /var/vcap/sys/cores
    chown vcap:vcap /var/vcap/sys/cores
    echo /var/vcap/sys/cores/core-%e-%s-%p-%t > /proc/sys/kernel/core_pattern

    ulimit -c unlimited

    cd $RACKAPP_DIR
    echo "Launching webapp within $RACKAPP_DIR"

    exec chpst -u vcap:vcap -e $RACKAPP_DIR bundle exec rackup -D -P $PIDFILE -p $PORT \
         >>$LOG_DIR/webapp.stdout.log \
         2>>$LOG_DIR/webapp.stderr.log || exit 1

    chown vcap:vcap $PIDFILE

    echo "Running webapp on $PORT"
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: webapp_ctl {start|stop}"

    ;;

esac
exit 0