#deployment phpfpm nginx.conf
<% require 'ostruct' %>
<% properties.webapp ||= OpenStruct.new %>
<% properties.webapp.nginx ||= OpenStruct.new %>
<% package_name = properties.webapp.package || 'wordpress' %>
<% webapp_port_start = 5000 %>

user vcap vcap;
worker_processes <%= properties.webapp.nginx.worker_processes || 1 %>;
pid /var/vcap/sys/run/phpfpm/nginx.pid;

events {
  worker_connections  8192;
  use epoll;
}


http {
  include       mime.types;
  default_type  text/html;
  server_tokens off;

  log_format main  '$host - [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$remote_addr response_time:$upstream_response_time';

  sendfile             on;  #enable use of sendfile()
  tcp_nopush           on;
  tcp_nodelay          on;  #disable nagel's algorithm

  server_names_hash_bucket_size  128;
  if_modified_since before;

  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;
  gzip_buffers      16 8k;
  gzip_types        application/json text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  upstream <%= package_name %>_upstream {
    server 127.0.0.1:<%= webapp_port_start %>;
  }

  server {
    #
    # The default port to listen on.
    #
    # Note that this may be also specified as IP:Port combinations.
    #
    # By default Nginx will listen for traffic on the specified port for all IP
    # addresses assigned to the host.
    #
    listen       <%= properties.webapp.nginx.port || 81 %>;

    #
    # Server Names
    #
    # This is the list of IP's and/or domain names with any wildcards or
    # subdomains. The special value '_' is used to match all domains and IPs and
    # generally denotes the default server for the entire Nginx process.
    #
    # Note that if you specify any domains with wild cards, the very first domain
    # listed must be without a wild card. For example:
    #
    # server_name www.mydomain.org *.mydomain.org;
    #
    # It is good practice to include wildcard subdomains so that Nginx will not
    # require a restart when new services are added for an application.
    #
    server_name  <%= properties.webapp.nginx.server_name || '_' %>;
    server_name_in_redirect off;

    #
    # This assigns the maximum accepted body size of client request. It is placed
    # here as a precaution to limit against certain kinds of attacks. Be aware that
    # it is here in case the application accepts large file uploads. In such a case
    # this value will need to be adjusted.
    #
    client_max_body_size 256M;

    #
    # The application root which is inherited for all location blocks below.
    #
    root /var/vcap/packages/<%= package_name %>/public;

    #
    # Logging
    #
    # Log files are stored within the /var/log/engineyard/nginx/ directory.
    #
    access_log  /var/vcap/sys/log/nginx/<%= package_name %>.access.log  main;
    error_log   /var/vcap/sys/log/nginx/<%= package_name %>.error.log notice;

    #
    # Expire header on assets. For more information on the reasoning behind
    # this please browse http://developer.yahoo.com/performance/rules.html#expires
    #
    # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
    location ~ ^/(images|assets|javascripts|stylesheets)/ {
      try_files  $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_<%= package_name %>;
      expires 10y;
    }

    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|xml)$ {
      access_log off;
      expires 10y;
    }

    # Parse all .php file in the /var/www directory
    location ~ .php$ {
      fastcgi_split_path_info ^(.+\.php)(.*)$;
      fastcgi_pass   backend;
      fastcgi_index  index.php;
      fastcgi_param  SCRIPT_FILENAME  /var/www$fastcgi_script_name; # FIXME
      include fastcgi_params;
      fastcgi_param  QUERY_STRING     $query_string;
      fastcgi_param  REQUEST_METHOD   $request_method;
      fastcgi_param  CONTENT_TYPE     $content_type;
      fastcgi_param  CONTENT_LENGTH   $content_length;
      fastcgi_intercept_errors        on;
      fastcgi_ignore_client_abort     off;
      fastcgi_connect_timeout 60;
      fastcgi_send_timeout 180;
      fastcgi_read_timeout 180;
      fastcgi_buffer_size 128k;
      fastcgi_buffers 4 256k;
      fastcgi_busy_buffers_size 256k;
      fastcgi_temp_file_write_size 256k;
    }

    # Disable viewing .htaccess & .htpassword
    location ~ /\.ht {
        deny  all;
    }

    #
    # HTTP Error handling.
    #
    # 404 - Resource Not found.
    error_page 404 /404.html;
    # 50X - Application Error(s)
    error_page 500 502 504 /500.html;
    # 503 - System Maintenance
    error_page 503 @503;
    recursive_error_pages on;
    location @503 {
      error_page 405 = /system/maintenance.html;

      # Serve static assets if found.
      if (-f $request_filename) {
        break;
      }

      rewrite ^(.*)$ /system/maintenance.html break;
    }
    error_page 503 /system/maintenance.html;

    #
    # The default location will process the request as follows:
    #
    # 1. If a system maintenance page is in place, serve it.
    # 2. If the request uri matches a resource on disk, serve it.
    # 3. If the request uri/index.html matches a cache file on disk, serve it.
    # 4. If the request uri.html is cached on disk, serve it.
    # 5. Failing any caching or system maintenance, pass the request to the
    #    application.
    #
    location / {
      if (-f $document_root/system/maintenance.html) { return 503; }
      try_files $uri $uri/index.html $uri.html $uri.php @app_<%= package_name %>;
    }

  }
}

